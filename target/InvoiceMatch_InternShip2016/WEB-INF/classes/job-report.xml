<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<bean id="reporthdr" class="com.mrv.intern.invoicematch.model.StgVendInvHdrVO" />

	<batch:job id="reportJobhdr">
		<batch:step id="step1hdr">
			<batch:tasklet allow-start-if-complete="true">
				<batch:chunk reader="cvsFileItemReaderhdr" processor="itemProcessorhdr" writer="mysqlItemWriterhdr"
					commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
<bean id="itemProcessorhdr" class="com.mrv.intern.invoicematch.batch.ItemProcessorhdr"></bean>
	<bean id="cvsFileItemReaderhdr" class="org.springframework.batch.item.file.FlatFileItemReader">

		<!-- Read a csv file -->
		<property name="resource" value="classpath:STG_VEND_INV_HDR.csv" />

		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="vendInvNbr,invTs,invRecdTs,invRecdUsrId,invAmt,dunsId,tradePrtnrId,hebSchPymtDt,procStatCd,vendId" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<!-- return back to reader, rather than a mapped object. -->
					<!-- <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" 
						/> -->
					<!-- map to an object -->
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="reporthdr" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="mysqlItemWriterhdr"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">

		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>            
            <![CDATA[        
            	insert into INTERNSHIP.STG_VEND_INV_HDR(VEND_INV_NBR,INV_TS,INV_RECD_TS,INV_RECD_USR_ID,INV_AMT,DUNS_ID,TRADE_PRTNR_ID,HEB_SCH_PYMT_DT,PROC_STAT_CD,VEND_ID) 
				values (?,?,?,?,?,?,?,?,?,?)
            ]]>
			</value>
		</property>
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="ItemPreparedStatementSetter">
			<bean
				class="com.mrv.intern.invoicematch.batch.ItemPreparedStatementSetterInvoice" />
		</property>
	</bean>
</beans>